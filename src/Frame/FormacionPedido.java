/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import conexiones.db.ConexionDBOriginal;
import controllers.altadeclientes.controladorCFP;
import internos.tickets.print.Funciones;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import renderTable.TModel;

public class FormacionPedido extends javax.swing.JFrame {

static int idPed =0;
static String name = "";
controladorCFP controlInserts = new controladorCFP();
Funciones fn = new Funciones();
ConexionDBOriginal con2 = new ConexionDBOriginal();

String[] cabEdoPed = {"idRel", "Flete", "idCompra", "Proveedor","Producto","Cantidad","Costo","Total"},
        cabFlet = {"Folio", "Carga", "Chofer", "Camioneta","Costo","Status"};

    public FormacionPedido(int id, String nam) {
        initComponents();
        this.idPed = id;
        this.name = nam;
        txtidPed.setText(Integer.toString(idPed));
        txtClieny.setText(name);
        cargaDetail(Integer.toString(idPed));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabDetailFletDet = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtTotMoneyMerca = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabDetailPedDet = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCostFletes = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtGranTot = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTotCajas = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        txtClieny = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtidPed = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Detalle Pedido");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabDetailFletDet.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTabDetailFletDet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTabDetailFletDet.setRowHeight(32);
        jTabDetailFletDet.setRowMargin(2);
        jScrollPane1.setViewportView(jTabDetailFletDet);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 470, 200));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("FLETES:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 120, 30));
        jPanel1.add(txtTotMoneyMerca, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 430, 100, 40));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/price_refresh.png"))); // NOI18N
        jButton2.setToolTipText("GUARDAR COSTO DE PEDIDO");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 480, -1, 60));

        jTabDetailPedDet.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTabDetailPedDet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTabDetailPedDet.setRowHeight(32);
        jTabDetailPedDet.setRowMargin(2);
        jScrollPane2.setViewportView(jTabDetailPedDet);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 730, 420));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 460, 10));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("TOTAL CAJAS:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 430, 110, 40));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("COSTO FLETES $ : ");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 710, 120, 40));
        jPanel1.add(txtCostFletes, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 710, 140, 40));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("TOTAL PEDIDO $");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 600, 140, 30));

        txtGranTot.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jPanel1.add(txtGranTot, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 530, 120, 70));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("COSTO MERCANCIA: $ : ");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 430, 160, 40));
        jPanel1.add(txtTotCajas, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 430, 80, 40));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("NOTA:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 650, 50, 60));

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane3.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(556, 640, 170, 70));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 51, 750, 770));
        getContentPane().add(txtClieny, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, 160, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("ID PEDIDO:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 120, 40));
        getContentPane().add(txtidPed, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 160, 40));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("CLIENTE:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 80, 40));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/delete32px.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 0, 50, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String id = txtidPed.getText(),
                gT = txtGranTot.getText(),
                not = jTextArea1.getText();
        actualizaCostoPedido(id,gT,not);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int sele = jTabDetailPedDet.getSelectedRow();
        if(sele > -1){
             String id = jTabDetailPedDet.getValueAt(sele, 0).toString();
             System.out.println("Eliminara: "+id);
             controlInserts.elimaRow("relcomprapedido","id_relacionCP",id);
             cargaDetail(Integer.toString(idPed));
        }else{
            JOptionPane.showMessageDialog(null, "No hay datos a eliminar");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormacionPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormacionPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormacionPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormacionPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormacionPedido(idPed,name).setVisible(true);
            }
        });
    }

    private void cargaDetail(String idD){       
        String[][] mat = controlInserts.matPedidosEst(idD);
        String[] arr = calcAsignAPed(idD);
        txtTotCajas.setText(arr[0]);
        txtTotMoneyMerca.setText(arr[1]);
       jTabDetailPedDet.setModel(new TModel(mat, cabEdoPed));
       jTabDetailPedDet.getColumnModel().getColumn(0).setMaxWidth(0);
        jTabDetailPedDet.getColumnModel().getColumn(0).setMinWidth(0);
        jTabDetailPedDet.getColumnModel().getColumn(0).setPreferredWidth(0);
        
        String[][] matFlet = matFletes(idD);
        jTabDetailFletDet.setModel(new TModel(matFlet,cabFlet));
        txtCostFletes.setText(calcPrecFlet(idD));
        
       // JOptionPane.showMessageDialog(null, "costo flete : "+calcPrecFlet(idD));
        
        BigDecimal amountOne = new BigDecimal(txtCostFletes.getText());//monto a cobrar
            BigDecimal amountTwo = new BigDecimal(txtTotMoneyMerca.getText());//cantidad recivida
            txtGranTot.setText(fn.getSum(amountOne, amountTwo).toString());
    } 
    
    public String[] calcAsignAPed(String idPed){
        Connection cn = con2.conexion();
        String[] prod = new String[2];
        String sql = "SELECT SUM(cantidadCajasRel),SUM(cantidadCajasRel*precioAjust)\n" +
                            "FROM relcomprapedido WHERE id_pedidoCli  = '"+idPed+"';";
        Statement st = null;
        ResultSet rs= null;
        try {
            st = cn.createStatement();
            rs = st.executeQuery(sql);
  /*          while(rs.next())
            {
                prod[0] = rs.getString(1);
                prod[1] = rs.getString(2);
            }
 */

            if(rs.next())
            {
                    if(rs.getRow() > 0){
                        prod[0] = rs.getString(1);
                        prod[1] = rs.getString(2);
                    }else{
                            prod[0] = "0.00";
                            prod[1] = "0.00"; 
                    }
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(FormacionPedido.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
                    try {
                        if(cn != null) cn.close();
                    } catch (SQLException ex) {
                       JOptionPane.showMessageDialog(null,ex.getMessage() );    
                    }
                }
        return prod;
    }
    
     public String[][] matFletes(String fech){
        Connection cn = con2.conexion();
          String sql ="",aux;
              sql = "SELECT\n" +
                "	relCompraPedido.id_fleteP,SUM(relCompraPedido.cantidadCajasRel) AS mercan,fleteenviado.choferFlete,\n" +
                "	fleteenviado.trocaFlete,fleteenviado.costoFlete,\n" +
                "	IF(fleteenviado.status = 0,\"PENDIENTE\",\"PAGADO\") AS condic\n" +
                "FROM\n" +
                "	relcomprapedido\n" +
                "INNER JOIN\n" +
                "	fleteenviado\n" +
                "ON\n" +
                " 	relcomprapedido.id_fleteP = fleteenviado.id_fleteE AND relCompraPedido.id_pedidoCli='"+fech+"'\n" +
                "GROUP BY\n" +
                "relcomprapedido.id_fleteP;";      
             int i =0,cantFilas=0, cont=1,cantColumnas=0;
             String[][] mat=null;
              int[] arrIdPedido = null;//int para usar hashMap
            Statement st = null;
            ResultSet rs = null;            
            try {
                st = cn.createStatement();
                rs = st.executeQuery(sql);
                cantColumnas = rs.getMetaData().getColumnCount();
               if(rs.last()){//Nos posicionamos al final
                    cantFilas = rs.getRow();//sacamos la cantidad de filas/registros
                    rs.beforeFirst();//nos posicionamos antes del inicio (como viene por defecto)
                }
               mat = new String[cantFilas][cantColumnas];
               //aqui iria crear matriz
                while(rs.next())
                {//es necesario el for para llenar dinamicamente la lista, ya que varia el numero de columnas de las tablas
                 
                      for (int x=1;x<= rs.getMetaData().getColumnCount();x++) {
                           // System.out.print("| "+rs.getString(x)+" |");
                             mat[i][x-1]=rs.getString(x);
                      //System.out.print(x+" -> "+rs.getString(x));                   
                      }//for
                       i++;
                }//whilE
            } catch (SQLException ex) {
                Logger.getLogger(controladorCFP.class.getName()).log(Level.SEVERE, null, ex);
            }finally{               
//             System.out.println("cierra conexion a la base de datos");    
             try {        
                 if(st != null) st.close();                
                 if(cn !=null) cn.close();
             } catch (SQLException ex) {
                 JOptionPane.showMessageDialog(null,ex.getMessage()); 
             }
         }//finally        
           if (cantFilas == 0){
                mat=null;
                mat = new String[1][cantColumnas];
                
                for (int j = 0; j < mat[0].length; j++) {
                     mat[0][j]="NO DATA";
                }
           }
return mat;            
}
     
      public String calcPrecFlet(String idPed){
        Connection cn = con2.conexion();
        Object prod = "";
        String prod2 ="0";
        String sql = "SELECT\n" +
                "	SUM(DISTINCT(fleteenviado.costoFlete)) AS mercan\n" +
                "FROM\n" +
                "	fleteenviado\n" +
                "INNER JOIN\n" +
                "	relcomprapedido\n" +
                "ON\n" +
                " 	relcomprapedido.id_fleteP = fleteenviado.id_fleteE AND relCompraPedido.id_pedidoCli='"+idPed+"';";
        Statement st = null;
        ResultSet rs= null;
        try {
            st = cn.createStatement();
            rs = st.executeQuery(sql);
            while(rs.next())
            {
                prod = rs.getString(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(FormacionPedido.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
                    try {
                        if(cn != null) cn.close();
                    } catch (SQLException ex) {
                       JOptionPane.showMessageDialog(null,ex.getMessage() );    
                    }
                }
        
        if(prod != null && !prod.toString().isEmpty())
            prod2 = prod.toString();
        
        return prod2;
    }
      
    public void actualizaCostoPedido(String id,String coast,String nota){
             Connection cn = con2.conexion();
            PreparedStatement pps=null;
            String SQL="";        
                SQL="UPDATE pedidocliente SET totalPrecio =?, notaPed =? WHERE id_pedido = '"+id+"' ";                           
            try {
                pps = cn.prepareStatement(SQL);
                pps.setString(1, coast);
                pps.setString(2, nota);
                
                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Pedido actualizado correctamente.");
            } catch (SQLException ex) {
                Logger.getLogger(controladorCFP.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Error durante la transaccion.");
            }finally{
 //               System.out.println( "cierra conexion a la base de datos" );    
                try {
                    if(pps != null) pps.close();                
                    if(cn !=null) cn.close();
                    } catch (SQLException ex) {
                     JOptionPane.showMessageDialog(null,ex.getMessage() );    
                    }
            }//finally catch
        }
           
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTabDetailFletDet;
    private javax.swing.JTable jTabDetailPedDet;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField txtClieny;
    private javax.swing.JTextField txtCostFletes;
    private javax.swing.JTextField txtGranTot;
    private javax.swing.JTextField txtTotCajas;
    private javax.swing.JTextField txtTotMoneyMerca;
    private javax.swing.JTextField txtidPed;
    // End of variables declaration//GEN-END:variables
}
